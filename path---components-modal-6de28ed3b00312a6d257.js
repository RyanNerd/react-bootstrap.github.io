webpackJsonp([0xdb82a7cb2792],{759:function(e,l){e.exports={data:{Modal:null,ModalHeader:{composes:null,displayName:"ModalHeader",description:null,props:[{name:"closeLabel",doclets:{type:null,controllable:null},defaultValue:{value:"'Close'",computed:!1},description:{childMarkdownRemark:{html:"<p>Provides an accessible label for the close\nbutton. It is used for Assistive Technology when the label text is not\nreadable.</p>"}},required:!1,type:{name:"string",value:null,raw:null}},{name:"closeButton",doclets:{type:null,controllable:null},defaultValue:{value:"false",computed:!1},description:{childMarkdownRemark:{html:"<p>Specify whether the Component should contain a close button</p>"}},required:!1,type:{name:"bool",value:null,raw:null}},{name:"onHide",doclets:{type:null,controllable:null},defaultValue:null,description:{childMarkdownRemark:{html:"<p>A Callback fired when the close button is clicked. If used directly inside\na Modal component, the onHide will automatically be propagated up to the\nparent Modal <code>onHide</code>.</p>"}},required:!1,type:{name:"func",value:null,raw:null}},{name:"bsClass",doclets:{type:null,controllable:null},defaultValue:{value:"'modal-header'",computed:null},description:{childMarkdownRemark:{html:"<p>Base CSS class and prefix for the component. Generally one should only change <code>bsClass</code> to provide new, non-Bootstrap, CSS styles for a component.</p>"}},required:!1,type:{name:"string",value:null,raw:null}}]},ModalTitle:{composes:null,displayName:"ModalTitle",description:null,props:[{name:"componentClass",doclets:{type:null,controllable:null},defaultValue:{value:"'h4'",computed:!1},description:{childMarkdownRemark:{html:"<p>You can use a custom element type for this component.</p>"}},required:!1,type:{name:"custom",value:null,raw:"elementType"}},{name:"bsClass",doclets:{type:null,controllable:null},defaultValue:{value:"'modal-title'",computed:null},description:{childMarkdownRemark:{html:"<p>Base CSS class and prefix for the component. Generally one should only change <code>bsClass</code> to provide new, non-Bootstrap, CSS styles for a component.</p>"}},required:!1,type:{name:"string",value:null,raw:null}}]},ModalBody:{composes:null,displayName:"ModalBody",description:null,props:[{name:"componentClass",doclets:{type:null,controllable:null},defaultValue:{value:"'div'",computed:!1},description:{childMarkdownRemark:{html:"<p>You can use a custom element type for this component.</p>"}},required:!1,type:{name:"custom",value:null,raw:"elementType"}},{name:"bsClass",doclets:{type:null,controllable:null},defaultValue:{value:"'modal-body'",computed:null},description:{childMarkdownRemark:{html:"<p>Base CSS class and prefix for the component. Generally one should only change <code>bsClass</code> to provide new, non-Bootstrap, CSS styles for a component.</p>"}},required:!1,type:{name:"string",value:null,raw:null}}]},ModalFooter:{composes:null,displayName:"ModalFooter",description:null,props:[{name:"componentClass",doclets:{type:null,controllable:null},defaultValue:{value:"'div'",computed:!1},description:{childMarkdownRemark:{html:"<p>You can use a custom element type for this component.</p>"}},required:!1,type:{name:"custom",value:null,raw:"elementType"}},{name:"bsClass",doclets:{type:null,controllable:null},defaultValue:{value:"'modal-footer'",computed:null},description:{childMarkdownRemark:{html:"<p>Base CSS class and prefix for the component. Generally one should only change <code>bsClass</code> to provide new, non-Bootstrap, CSS styles for a component.</p>"}},required:!1,type:{name:"string",value:null,raw:null}}]}},pathContext:{}}}});
//# sourceMappingURL=path---components-modal-6de28ed3b00312a6d257.js.map