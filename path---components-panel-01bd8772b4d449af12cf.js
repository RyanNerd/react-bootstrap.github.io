webpackJsonp([0x8d88395193dc],{765:function(e,l){e.exports={data:{Panel:null,PanelHeading:null,PanelTitle:null,PanelBody:null,PanelFooter:null,PanelToggle:null,PanelCollapse:null,PanelGroup:{composes:null,displayName:"PanelGroup",description:null,props:[{name:"accordion",doclets:{type:null,controllable:null},defaultValue:{value:"false",computed:!1},description:null,required:!1,type:{name:"bool",value:null,raw:null}},{name:"activeKey",doclets:{type:null,controllable:"onSelect"},defaultValue:null,description:{childMarkdownRemark:{html:"<p>When <code>accordion</code> is enabled, <code>activeKey</code> controls the which child <code>Panel</code> is expanded. <code>activeKey</code> should\nmatch a child Panel <code>eventKey</code> prop exactly.</p>"}},required:!1,type:{name:"any",value:null,raw:null}},{name:"onSelect",doclets:{type:null,controllable:"activeKey"},defaultValue:null,description:{childMarkdownRemark:{html:"<p>A callback fired when a child Panel collapse state changes. It's called with the next expanded <code>activeKey</code></p>"}},required:!1,type:{name:"func",value:null,raw:null}},{name:"role",doclets:{type:null,controllable:null},defaultValue:null,description:{childMarkdownRemark:{html:"<p>An HTML role attribute</p>"}},required:!1,type:{name:"string",value:null,raw:null}},{name:"generateChildId",doclets:{type:null,controllable:null},defaultValue:{value:"(eventKey, type) => `${this.props.id}-${type}-${key}`",computed:!1},description:{childMarkdownRemark:{html:'<p>A function that takes an eventKey and type and returns a\nunique id for each Panel heading and Panel Collapse. The function <em>must</em> be a pure function,\nmeaning it should always return the <em>same</em> id for the same set of inputs. The default\nvalue requires that an <code>id</code> to be set for the PanelGroup.</p>\n<p>The <code>type</code> argument will either be <code>"body"</code> or <code>"heading"</code>.</p>'}},required:!1,type:{name:"func",value:null,raw:null}},{name:"id",doclets:{type:null,controllable:null},defaultValue:null,description:{childMarkdownRemark:{html:"<p>HTML id attribute, required if no <code>generateChildId</code> prop\nis specified.</p>"}},required:!1,type:{name:"custom",value:null,raw:"generatedId('PanelGroup')"}},{name:"bsClass",doclets:{type:null,controllable:null},defaultValue:{value:"'panel-group'",computed:null},description:{childMarkdownRemark:{html:"<p>Base CSS class and prefix for the component. Generally one should only change <code>bsClass</code> to provide new, non-Bootstrap, CSS styles for a component.</p>"}},required:!1,type:{name:"string",value:null,raw:null}}]}},pathContext:{}}}});
//# sourceMappingURL=path---components-panel-01bd8772b4d449af12cf.js.map